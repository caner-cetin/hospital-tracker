{
    "swagger": "2.0",
    "info": {
        "description": "A hospital management and tracking platform",
        "title": "Hospital Tracker API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/clinic-types": {
            "get": {
                "description": "Get all available clinic types for creating clinics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reference Data"
                ],
                "summary": "Get all clinic types",
                "responses": {
                    "200": {
                        "description": "List of clinic types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClinicType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clinics": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all clinics in the hospital",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinics"
                ],
                "summary": "Get all clinics",
                "responses": {
                    "200": {
                        "description": "List of clinics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Clinic"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new clinic in the hospital (requires authorization)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinics"
                ],
                "summary": "Create a new clinic",
                "parameters": [
                    {
                        "description": "Clinic creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClinicRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Clinic created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Clinic"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clinics/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a clinic from the hospital (requires authorization)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clinics"
                ],
                "summary": "Delete a clinic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clinic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clinic deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Clinic not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/districts": {
            "get": {
                "description": "Get all districts or districts filtered by province",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reference Data"
                ],
                "summary": "Get districts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province ID to filter districts",
                        "name": "province_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of districts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.District"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with email/phone and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/password-reset/confirm": {
            "post": {
                "description": "Reset password using the verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm password reset",
                "parameters": [
                    {
                        "description": "Password reset confirmation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PasswordResetConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/password-reset/request": {
            "post": {
                "description": "Request a password reset code via phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "Phone number for password reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset code sent",
                        "schema": {
                            "$ref": "#/definitions/models.PasswordResetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profession-groups": {
            "get": {
                "description": "Get all available profession groups for staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reference Data"
                ],
                "summary": "Get all profession groups",
                "responses": {
                    "200": {
                        "description": "List of profession groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProfessionGroup"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/provinces": {
            "get": {
                "description": "Get all provinces in the country",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reference Data"
                ],
                "summary": "Get all provinces",
                "responses": {
                    "200": {
                        "description": "List of provinces",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Province"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new hospital with authorized user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hospital"
                ],
                "summary": "Register a new hospital",
                "parameters": [
                    {
                        "description": "Hospital registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HospitalRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Hospital registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/staff": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get staff members with optional filtering by clinic, profession group, etc.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get staff members with filtering",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by clinic ID",
                        "name": "clinic_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by profession group ID",
                        "name": "profession_group_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of staff members",
                        "schema": {
                            "$ref": "#/definitions/models.StaffPaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new staff member in the hospital (requires authorization)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Create a new staff member",
                "parameters": [
                    {
                        "description": "Staff creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Staff created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/staff/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get detailed information about a specific staff member",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get a staff member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff member information",
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Staff not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update staff member information (requires authorization)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Update a staff member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Staff update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Staff"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Staff not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a staff member from the hospital (requires authorization)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Delete a staff member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Staff not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all users in the hospital",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user in the hospital (requires authorization)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get detailed information about a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user information (requires authorization)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user from the hospital (requires authorization)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Clinic": {
            "type": "object",
            "properties": {
                "clinic_type": {
                    "$ref": "#/definitions/models.ClinicType"
                },
                "clinic_type_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "hospital": {
                    "$ref": "#/definitions/models.Hospital"
                },
                "hospital_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "staff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Staff"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ClinicType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CreateClinicRequest": {
            "type": "object",
            "required": [
                "clinic_type_id"
            ],
            "properties": {
                "clinic_type_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateStaffRequest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "national_id",
                "phone",
                "profession_group_id",
                "title_id"
            ],
            "properties": {
                "clinic_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession_group_id": {
                    "type": "integer"
                },
                "title_id": {
                    "type": "integer"
                },
                "working_days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkingDay"
                    }
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "national_id",
                "password",
                "phone",
                "user_type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "user_type": {
                    "enum": [
                        "authorized",
                        "employee"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.UserType"
                        }
                    ]
                }
            }
        },
        "models.District": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "$ref": "#/definitions/models.Province"
                },
                "province_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Hospital": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "clinics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Clinic"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "district": {
                    "$ref": "#/definitions/models.District"
                },
                "district_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "$ref": "#/definitions/models.Province"
                },
                "province_id": {
                    "type": "integer"
                },
                "staff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Staff"
                    }
                },
                "tax_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.HospitalRegistrationRequest": {
            "type": "object",
            "required": [
                "address",
                "district_id",
                "email",
                "first_name",
                "hospital_name",
                "last_name",
                "national_id",
                "password",
                "phone",
                "province_id",
                "tax_id",
                "user_email",
                "user_phone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "hospital_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "province_id": {
                    "type": "integer"
                },
                "tax_id": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "identifier",
                "password"
            ],
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "models.PasswordResetConfirmRequest": {
            "type": "object",
            "required": [
                "code",
                "confirm_password",
                "new_password",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "confirm_password": {
                    "type": "string",
                    "minLength": 6
                },
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.PasswordResetRequest": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.PasswordResetResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "models.ProfessionGroup": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Title"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Province": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "districts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.District"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Staff": {
            "type": "object",
            "properties": {
                "clinic": {
                    "$ref": "#/definitions/models.Clinic"
                },
                "clinic_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "first_name": {
                    "type": "string"
                },
                "hospital": {
                    "$ref": "#/definitions/models.Hospital"
                },
                "hospital_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession_group": {
                    "$ref": "#/definitions/models.ProfessionGroup"
                },
                "profession_group_id": {
                    "type": "integer"
                },
                "title": {
                    "$ref": "#/definitions/models.Title"
                },
                "title_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "working_days": {
                    "type": "string"
                }
            }
        },
        "models.StaffPaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Staff"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.Title": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profession_group": {
                    "$ref": "#/definitions/models.ProfessionGroup"
                },
                "profession_group_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateStaffRequest": {
            "type": "object",
            "properties": {
                "clinic_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession_group_id": {
                    "type": "integer"
                },
                "title_id": {
                    "type": "integer"
                },
                "working_days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkingDay"
                    }
                }
            }
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_type": {
                    "enum": [
                        "authorized",
                        "employee"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.UserType"
                        }
                    ]
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "hospital": {
                    "$ref": "#/definitions/models.Hospital"
                },
                "hospital_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "national_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/models.UserType"
                }
            }
        },
        "models.UserType": {
            "type": "string",
            "enum": [
                "authorized",
                "employee"
            ],
            "x-enum-varnames": [
                "UserTypeAuthorized",
                "UserTypeEmployee"
            ]
        },
        "models.WorkingDay": {
            "type": "string",
            "enum": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
            ],
            "x-enum-varnames": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}